/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ebookcenter;

import javax.swing.JOptionPane;

/**
 *
 * @author think
 */
public class DeletePageWindow extends javax.swing.JFrame {

    private makeWindow parent;

    /**
     * Creates new form DeletePageWindow
     */
    public DeletePageWindow(makeWindow parent) {
        initComponents();
        this.parent = parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        deletePageNum = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setText("请输入需要删除的页码：");

        deletePageNum.setPreferredSize(new java.awt.Dimension(100, 21));

        jButton1.setText("确认");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("取消");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(deletePageNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jButton1)
                        .addGap(70, 70, 70)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deletePageNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(82, 82, 82))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:取消
        this.dispose();
        System.out.print(this.getParent());
        this.parent.setEnabled(true);
        this.parent.requestFocus();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:确认
        if (TextBox.isInteger(deletePageNum.getText())) {
            int temp = Integer.parseInt(deletePageNum.getText());
            if (temp <= this.parent.getCurrentProject().getPages().size() && temp > 0) {
                //页面存在
                if (temp - 1 == this.parent.getCurrentProject().getCurrentPage()) {
                    //当前页面
                    if ((temp - 1) < (this.parent.getCurrentProject().getPages().size() - 1)) {
                        this.parent.getCurrentProject().delPage(temp - 1);
                        this.parent.getPageContainer().fresh();
                        this.parent.getPageArea().refresh();
                        this.parent.getPageArea().updateUI();
                        this.dispose();
                        this.parent.setEnabled(true);
                        this.parent.requestFocus();
                        this.parent.setAlwaysOnTop(true);
                        this.parent.setAlwaysOnTop(false);
                    } else {
                        if ((temp - 1) != 0) {
                            this.parent.getCurrentProject().delPage(temp - 1);
                            this.parent.getCurrentProject().setCurrentPage(this.parent.getCurrentProject().getPages().size() - 1);
                            this.parent.getPageContainer().fresh();
                            this.parent.getPageArea().refresh();
                            this.parent.getPageArea().updateUI();
                            this.dispose();
                            this.parent.setEnabled(true);
                            this.parent.requestFocus();
                            this.parent.setAlwaysOnTop(true);
                            this.parent.setAlwaysOnTop(false);
                        } else {
                            this.parent.getCurrentProject().delPage(temp - 1);
                            this.parent.getCurrentProject().setCurrentPage(-1);
                            this.parent.getPageContainer().fresh();
                            this.parent.getPageArea().refresh();
                            this.parent.getPageArea().updateUI();
                            this.dispose();
                            this.parent.setEnabled(true);
                            this.parent.requestFocus();
                            this.parent.setAlwaysOnTop(true);
                            this.parent.setAlwaysOnTop(false);
                        }
                    }
                    /*if ((this.parent.getCurrentProject().getCurrentPage() + 1) == this.parent.getCurrentProject().getPages().size()) {
                     //当前页为最后一页
                     if (temp == 1) {
                     //当前项目只有一页
                     this.parent.getCurrentProject().setCurrentPage(-1);
                     this.parent.getCurrentProject().delPage(temp - 1);
                     this.parent.getPageContainer().fresh();
                     this.parent.getPageArea().removeAll();
                     this.parent.getPageArea().updateUI();
                     this.dispose();
                     this.parent.setEnabled(true);
                     this.parent.requestFocus();
                     this.parent.setAlwaysOnTop(true);
                     this.parent.setAlwaysOnTop(false);
                     } else {
                     //当前页为最后一页且不是第一页
                     this.parent.getCurrentProject().setCurrentPage(temp - 2);
                     this.parent.getCurrentProject().delPage(temp - 1);
                     this.parent.getPageContainer().fresh();

                     this.parent.getCurrentProject().getPage(temp - 2).selectBounds(parent.getPageArea());//刷新编辑区
                     this.parent.getPageArea().removeAll();
                     this.parent.getPageArea().add(this.parent.getCurrentProject().getPage(temp - 2));
                     this.parent.getPageArea().updateUI();
                     this.dispose();
                     this.parent.setEnabled(true);
                     this.parent.requestFocus();
                     this.parent.setAlwaysOnTop(true);
                     this.parent.setAlwaysOnTop(false);
                     }
                     } else {
                     this.parent.getCurrentProject().setCurrentPage(temp);
                     this.parent.getCurrentProject().delPage(temp - 1);
                     this.parent.getPageContainer().fresh();

                     this.parent.getCurrentProject().getPage(temp).selectBounds(parent.getPageArea());//刷新编辑区
                     this.parent.getPageArea().removeAll();
                     this.parent.getPageArea().add(this.parent.getCurrentProject().getPage(temp));
                     this.parent.getPageArea().updateUI();
                     this.dispose();
                     this.parent.setEnabled(true);
                     this.parent.requestFocus();
                     this.parent.setAlwaysOnTop(true);
                     this.parent.setAlwaysOnTop(false);
                     }*/
                } else {
                    int a = this.parent.getCurrentProject().getCurrentPage();
                    if((temp - 1) < a)this.parent.getCurrentProject().setCurrentPage(a-1);
                    this.parent.getCurrentProject().delPage(temp - 1);
                    this.parent.getPageContainer().fresh();
                    this.dispose();
                    this.parent.setEnabled(true);
                    this.parent.requestFocus();
                    this.parent.setAlwaysOnTop(true);
                    this.parent.setAlwaysOnTop(false);
                }
            } else {
                JOptionPane.showMessageDialog(null, "您输入的页面不在当前项目中！", "警告", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "请输入正确的页面数！", "警告", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton1MouseClicked
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
     /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    /*  try {
     for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
     if ("Nimbus".equals(info.getName())) {
     javax.swing.UIManager.setLookAndFeel(info.getClassName());
     break;
     }
     }
     } catch (ClassNotFoundException ex) {
     java.util.logging.Logger.getLogger(DeletePageWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (InstantiationException ex) {
     java.util.logging.Logger.getLogger(DeletePageWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (IllegalAccessException ex) {
     java.util.logging.Logger.getLogger(DeletePageWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (javax.swing.UnsupportedLookAndFeelException ex) {
     java.util.logging.Logger.getLogger(DeletePageWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     }
     //</editor-fold>

     /* Create and display the form */
    /*  java.awt.EventQueue.invokeLater(new Runnable() {
     public void run() {
     new DeletePageWindow().setVisible(true);
     }
     });
     }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField deletePageNum;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
