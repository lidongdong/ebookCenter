/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ebookcenter;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author think
 */
public class bookWindow extends javax.swing.JFrame implements MouseListener {

    JTable table;
    private List<File> ebookFile;

    /**
     * Creates new form bookWindow
     */
    public bookWindow() {

        ebookFile = new ArrayList<File>();
        DefaultTableModel model = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        table = new JTable(model);
        //table.setRowSorter((new TableRowSorter(model)));
        model.addColumn("名称");
        model.addColumn("类型");
        model.addColumn("日期");
        this.getContentPane().add(new JScrollPane(table), BorderLayout.CENTER);
        SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        refresh(configWindow.readFile().getSaveDir());
        for (int i = 0; i < ebookFile.size(); i++) {
            try {
                model.addRow(new Object[]{openFile(ebookFile.get(i).getAbsolutePath()).getName(),
                    "大小" + openFile(ebookFile.get(i).getAbsolutePath()).getTrueWidth() + "*" + openFile(ebookFile.get(i).getAbsolutePath()).getTrueHeight() + "mm",
                    sf.format(openFile(ebookFile.get(i).getAbsolutePath()).getDate())});
            } catch (IOException ex) {
                Logger.getLogger(bookWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        table.addMouseListener(this);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                bookWindow bw = new bookWindow();

                bw.setVisible(true);
            }
        });
    }

    public void refresh(String dir) {
        File file = new File(dir);
        if (file.isDirectory()) {
            File[] temp = file.listFiles();
            for (int i = 0; i < temp.length; i++) {
                refresh(temp[i].getAbsolutePath());
            }
        } else {
            if (file.getAbsolutePath().endsWith("ebf")) {
                ebookFile.add(file);
            }
        }
    }

    public Project openFile(String file) throws IOException {
        Project p = null;
        try {
            FileInputStream f = null;
            f = new FileInputStream(file);
            ObjectInputStream s = new ObjectInputStream(f);
            p = (Project) s.readObject();//读对象
            s.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(makeWindow.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return p;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getButton() == MouseEvent.BUTTON1) {
            if (e.getClickCount() == 2) {
                play(table.rowAtPoint(e.getPoint()));
            }
        }
    }

    public void play(int index) {
        try {
            if (openFile((ebookFile.get(index)).getAbsolutePath()).getPages().isEmpty()) {
            } else {
                Player player = new Player(openFile((ebookFile.get(index)).getAbsolutePath()));
            }
        } catch (IOException ex) {
            Logger.getLogger(bookWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }
}
